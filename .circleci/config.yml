version: 2.1

orbs:
  node: circleci/node@5.0.0
  snyk: snyk/snyk@1.1.2

jobs:
  run-tests:
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run tests
          command: |
            npm run test-ci
      - run:
          name: Copy tests results for storing
          command: |
            mkdir test-results/
            cp test-results.xml test-results/
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  security-scan:
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout
      - node/install-packages
      - snyk/scan:
          fail-on-issues: true
          severity-threshold: high

  # Just to illustrate flow and access control. Does not actually deploy in this example.
  deploy-app:
    parameters:
      env:
        type:
          string
        default:
          dev
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: echo "Deploy << parameters.env >>!"

  check-env-var:
    docker:
      - image: cimg/base:stable
    steps:
      - run: 
          name: Check if MY_SAMPLE_VARIABLE exists
          command: |
            if [[ -z $MY_SAMPLE_VARIABLE ]]; then
              echo "MY_SAMPLE_VARIABLE is not set - job failing"
              exit 1
            else
              echo "MY_SAMPLE_VARIABLE is set - job will pass!"
              exit 0
            fi


workflows:
  build-test-deploy:
    jobs:
      - run-tests
      - approve-for-prod:
          type: approval
          requires:
            - run-tests
      - check-env-var:
          context: sample-var-ctx
          requires:
            - approve-for-prod
      - security-scan:
          context: snyk
          requires:
            - approve-for-prod
      - deploy-app:
          env: prod
          name: deploy-app-prod
          requires:
            - approve-for-prod
            - security-scan
            - check-env-var
          context: inner-team
          filters:
            branches:
              only: 
                - main
